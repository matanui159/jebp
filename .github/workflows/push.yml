name: On Push
on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Ubuntu GCC x86-64
            runs-on: ubuntu-latest
            cmake-flags: -DJEBP_SANITIZE=ON
          - name: Ubuntu Clang x86-64
            runs-on: ubuntu-latest
            cc: clang
            cmake-flags: -DJEBP_SANITIZE=ON
          - name: Ubuntu MinGW x86-64
            runs-on: ubuntu-latest
            packages: gcc-mingw-w64-x86-64 wine-stable
            cmake-flags: --toolchain dev/toolchain/x86_64-w64-mingw32.cmake
          - name: Ubuntu GCC x86-32
            runs-on: ubuntu-latest
            packages: gcc-i686-linux-gnu libc-dev-i386-cross qemu-user
            cmake-flags: --toolchain dev/toolchain/i686-linux-gnu.cmake
          - name: Ubuntu GCC AArch64
            runs-on: ubuntu-latest
            packages: gcc-aarch64-linux-gnu libc-dev-arm64-cross qemu-user
            cmake-flags: --toolchain dev/toolchain/aarch64-linux-gnu.cmake
          - name: Ubuntu GCC AArch32
            runs-on: ubuntu-latest
            packages: gcc-arm-linux-gnueabi libc-dev-armel-cross qemu-user
            cmake-flags: --toolchain dev/toolchain/arm-linux-gnueabi.cmake
          - name: Ubuntu GCC AArch32 hard-float
            runs-on: ubuntu-latest
            packages: gcc-arm-linux-gnueabihf libc-dev-armhf-cross qemu-user
            cmake-flags: --toolchain dev/toolchain/arm-linux-gnueabihf.cmake
          - name: Windows MSVC x86-64
            runs-on: windows-latest
            cmake-flags: -DJEBP_SANITIZE=ON
          - name: MacOS Clang x86-64
            runs-on: macos-latest
            cmake-flags: -DJEBP_SANITIZE=ON
    name: Tests (${{ matrix.name }})
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      - if: matrix.packages != ''
        name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.packages }}
      - name: Configure project
        run: cmake -B bin -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmake-flags }}
        env:
          CC: ${{ matrix.cc }}
          CFLAGS: ${{ matrix.cflags }}
      - name: Compile project
        run: cmake --build bin --config Release
      - name: Run tests
        run: ctest --test-dir bin --build-config Release --verbose

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure project
        run: cmake -B bin
      - name: Format code
        run: cmake --build bin --target format
      - name: Check for differences
        run: git diff --exit-code --color
