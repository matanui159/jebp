name: On Push
on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Ubuntu GCC x86-64
            runs-on: ubuntu-latest
            meson-cc: gcc
            meson-flags: --werror
          - name: Ubuntu Clang x86-64
            runs-on: ubuntu-latest
            meson-cc: clang
            meson-flags: --werror
          - name: Ubuntu MinGW x86-64
            runs-on: ubuntu-latest
            packages: gcc-mingw-w64-x86-64 wine-stable
            meson-flags: --werror --cross-file cross/x86_64-w64-mingw32.ini
          - name: Ubuntu GCC i686
            runs-on: ubuntu-latest
            packages: gcc-i686-linux-gnu libc-dev-i386-cross qemu-user
            meson-flags: --werror --cross-file cross/i686-linux-gnu.ini
          - name: Ubuntu GCC aarch64
            runs-on: ubuntu-latest
            packages: gcc-aarch64-linux-gnu libc-dev-arm64-cross qemu-user
            meson-flags: --werror --cross-file cross/aarch64-linux-gnu.ini
          - name: Ubuntu GCC arm32
            runs-on: ubuntu-latest
            packages: gcc-arm-linux-gnueabi libc-dev-armel-cross qemu-user
            meson-flags: --werror --cross-file cross/arm-linux-gnueabi.ini
          - name: Ubuntu GCC armhf
            runs-on: ubuntu-latest
            packages: gcc-arm-linux-gnueabihf libc-dev-armhf-cross qemu-user
            meson-flags: --werror --cross-file cross/arm-linux-gnueabihf.ini
          - name: Windows MSVC x86-64
            runs-on: windows-latest
            meson-flags: --vsenv
          - name: MacOS Apple-Clang x86-64
            runs-on: macos-latest
            meson-flags: --werror
    name: Tests (${{ matrix.name }})
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Install Meson
        run: pip3 install meson
      - if: startsWith(matrix.runs-on, 'ubuntu-')
        name: Install APT packages
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build ${{ matrix.packages }}
      - if: startsWith(matrix.runs-on, 'macos-')
        name: Install Homebrew packages
        run: brew install ninja ${{ matrix.packages }}
      - name: Setup project
        run: >
          meson setup bin
          --buildtype release
          -Djebp_test=true
          ${{ matrix.meson-flags }}
        env:
          CC: ${{ matrix.meson-cc }}
      - name: Compile project
        run: meson compile
        working-directory: bin
      - name: Run tests
        run: meson test --verbose
        working-directory: bin

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Meson
        run: pip3 install meson
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build libsdl2-dev
      - name: Setup project
        run: meson setup bin
      - name: Format code
        run: ninja clang-format
        working-directory: bin
      - name: Check for differences
        run: git diff --exit-code --color
